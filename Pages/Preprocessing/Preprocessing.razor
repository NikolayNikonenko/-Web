@page "/preprocessing"
@using перенос_бд_на_Web.Models
@using перенос_бд_на_Web.Services
@using Microsoft.EntityFrameworkCore
@inject ApplicationContext _context
@inject DataFilterService _dataFilterService

<PageTitle>Предварительная подготовка файлов</PageTitle>

<h3>Предварительная подготовка файлов</h3>

<div>
    <button class="btn btn-primary mt-2" @onclick="ToggleDateIntervalFields">Задать интервал для расчета ПТИ ДТИ</button>
</div>

@code {
    private DateTime? startDate;
    private DateTime? endDate;
    private int thinningInterval = 1;
    private bool isThinning = false; // Флаг для прореживания
    private bool showDateIntervalFields = false; // Флаг для отображения полей
    private bool isCalculating = false; // Флаг для отображения прогресса
    private int progress = 0; // Прогресс выполнения

    private List<TMValues> filteredData;

    private async Task ApplyFilters()
    {
        try
        {
            filteredData = await _dataFilterService.ApplyTimeIntervalFilterAsync(startDate, endDate, isThinning, thinningInterval);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка: {ex.Message}");
        }
    }

    private void ToggleDateIntervalFields()
    {
        showDateIntervalFields = !showDateIntervalFields; // Переключение видимости
    }

    private async Task CalculateDTIForSelectedInterval()
    {
        if (filteredData == null || !filteredData.Any())
        {
            Console.WriteLine("Нет данных для расчёта.");
            return;
        }
        isCalculating = true;
        progress = 0;

        try
        {
            // Предполагаем, что каждый срез имеет путь или идентификатор
            var sliceNames = filteredData.Select(data => data.NumberOfSrez).Distinct().ToList();

            // Извлекаем соответствующие пути из таблицы Slices
            var slicePaths = await _context.slices
                .Where(s => sliceNames.Contains(s.SliceName) && s.experiment_label == "Входные данные")
                .Select(s => s.SlicePath)
                .ToListAsync();

            int totalSlices = slicePaths.Count;
            int processedSlices = 0;

            foreach (var path in slicePaths)
            {
                CalculationDTI dtiCalculation = new CalculationDTI();
                await Task.Run(() => dtiCalculation.CalculateDTIAndPTI(path, _context));
                processedSlices++;
                progress = (int)((processedSlices / (double)totalSlices) * 100);
                StateHasChanged(); // Обновление UI
            }

            Console.WriteLine("Расчёт завершён.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка расчёта: {ex.Message}");
        }
        finally
        {
            isCalculating = false;
            progress = 100; // Устанавливаем прогресс на 100%
            StateHasChanged();   
        }
    }

}

@if (showDateIntervalFields)
{
    <div class="d-flex flex-column mt-3">
        <label>Начало временного промежутка:</label>
        <input type="datetime-local" @bind="startDate" class="form-control mb-2" />


        <label>Конец временного промежутка:</label>
        <input type="datetime-local" @bind="endDate" class="form-control" />
    </div>
    @if (isThinning)
    {
        <div class="mt-3">
            <label>Интервал прореживания:</label>
            <input type="number" @bind="thinningInterval" min="1" class="form-control" />
        </div>
    }

    <div class="form-check mt-3">
        <input type="checkbox" @bind="isThinning" class="form-check-input" />
        <label class="form-check-label">Приментиь прореживание</label>
    </div>

    <button class="btn btn-primary mt-2" @onclick="ApplyFilters">Применить заданный интервал</button>
}

<div>
    <button class="btn btn-success mt-2" @onclick="CalculateDTIForSelectedInterval">
        Рассчитать ПТИ и ДТИ для выбранного интервала
    </button>
</div>

@if (isCalculating)
{
    <div class="mt-4">
        <h5>Прогресс выполнения:</h5>
        <div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @progress%;"></div>
        </div>
        <p>@progress% завершено</p>
    </div>
}

